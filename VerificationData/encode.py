#!/usr/bin/env python                                                                                                                                                                     
import numpy as np
import math

verb  = False

def getDynRange(nexp, nman, ndrop):
    dyn_range = 0
    # exp specifies position of bit of leading 1 counting from 0
    # for nexp, maximum position is 2**nexp - 1
    # thus max value corresponding to max position would be 2 ** (2**nexp-1)
    # however, the position is specified from the left of the mantissa bits, so 
    # max position would be 2**nexp - 1 + nman
    # however, one exp code is reserved for "no leading 1 beyond mantissa",
    # max position should be 2**nexp - 1 + (nman - 1)
    # i.e. shift = nman -1 

    # if any bits are initially drppped, we need to add those back too:
    # max position should be 2**nexp - 1 + (nman - 1) + ndrop

    exp_range = 2**nexp -1 + (nman-1) + ndrop
    if verb: print ("exp_range = ", 2**exp_range)

    dyn_range += 2**exp_range
    # Nexp_range = 2**nexp-1+(nexp-nman+1)+ndrop     
    for ibit in range(nman):
        dyn_range += 2**(exp_range - (ibit+1)) 

    if verb: print ("Dynamic range = ", dyn_range)
    return dyn_range


def encodeChg19(ichg, lsb, drange):
    # ichg is real number charge in fC
    # first find value of 19-bit ADC with 0.1 fC/ADC

    adc_bins = np.linspace(0., drange, drange/lsb)
    iadc = np.digitize(ichg, adc_bins)
    return iadc

def findPosMSB(iadc):
    #iadc is an integer
    if iadc == 0: return 0
    ipos = int(math.log(iadc,2))
    return ipos

def findMant(iadc, ipos, nman, iround):
    # iadc is int
    b_adc = format(iadc,'b')
    lb = len(b_adc)
    if lb <= nman: # Mantissa length is reduced because MSB is close to end
        imant = int(b_adc,2)  # If position of MSB is not > number of mantissa bits, mantissa as nman LSB
    elif ipos >= nman: # Mantissa length is last n
        imant = int(b_adc[lb-ipos : lb-ipos+nman],2)  
        if iround and ipos > nman:
            next_bit = b_adc[lb-ipos+nman : lb-ipos+nman+1]
            if next_bit == "1":  
                imant += 1
    if verb : print ("findMant : returning imant:", imant)
    return imant


def encode(iadc0, iround, idrop, nexp, nman, combined=False):
    ishift = nman-1 # number of bits to shift for encoding position of MSB
    # nexp - nman is expected, but you need one code exp = '0000' to say that there is no leading "1".
    # so it becomes nexp - nman + 1

    # First handle adc=0 special case
    if iadc0 == 0: 

        b_exp = format(0,'0'+str(nexp)+'b')
        b_man = format(0,'0'+str(nman)+'b')
        return (b_exp, b_man)

    # Drop last bits:
    if verb : print ("encode : iadc = ", iadc)
    if iround:
        iadc = (iadc0 + iadc0%2) >> idrop
    else:
        iadc = iadc0 >> idrop


    # Find position of MSB    
    if verb : print ("encode : drop LSB so iadc = ", iadc)
    ipos  = findPosMSB(iadc)  
    if verb : print ("encode : ipos = ", ipos)
    # Will shift later as done in HGCROC to fit all possible MSB into 4-bit exp
    # Find mantissa bits
    imant = findMant(iadc, ipos, nman, iround)
    if verb : print ("encode : imant = ", imant)

    if verb : print ("encode : ipos, nshift = ",  ipos, ishift)
    ipos_shift = ipos-ishift

    # Round up position of MSB if imant=1000 instead of 111
    if iround and imant == 2**nman:
        if (ipos_shift < 2**nexp-1) :
            ipos_shift  += 1
            imant = 0
        else:
            imant -= 1
    elif imant == 2**nman and not iround:
        print ("Problem : imant should not be rounded up.")

    
    if ipos_shift >= 0:
        b_exp = format(ipos_shift,'0'+str(nexp)+'b')
    else:
        b_exp = format(0,'0'+str(nexp)+'b')

    b_man = format(imant, '0'+str(nman)+'b')

    if int(b_exp,2) == 2**nexp and int(b_man,2)==0:
        b_exp = format(2**nexp-1,'0'+str(nexp)+'b')
        b_man = format(2**nman-1,'0'+str(nman)+'b')
    elif len(b_exp) != nexp or len(b_man) != nman:
        print ("Problem : iadc, b_exp, b_man, nexp, nman, iround = ",  iadc0, b_exp, b_man, nexp, nman, iround)

    if not combined:
        return (b_exp, b_man)
    else:
        return (b_exp + b_man)
       
def decode(b_exp, b_man, idrop):    
    ishift = len(b_man)-1 # see above for explanation

    # b_exp, b_man are binary strings
    iexp = int(b_exp,2)
    iman = int(b_man,2)
    if iexp == 0 and iman == 0 : 
        return 0
    b1_pos  = iexp+ishift
    man_pos = b1_pos-len(b_man)
    
    if man_pos >= 0.:
        inum = ( (1<<b1_pos) + (iman << man_pos) )
    elif iexp == 0:    
        inum = iman
    else :
        print ("Shouldn't get here.  Exiting.")
        print ("n_exp, n_man = ", nexp, nman)
        print ("b_exp, b_man = ", b_exp, b_man)
        print ("man_pos, iexp, b1_pos, len(b_man), = ", man_pos, iexp, b1_pos, len(b_man))
        sys.exit()
    inum = inum<<idrop
    return inum

def doDigi(ichg, iround, nman, nexp):  # in fC

    #    saturated = False
    lsb  = 0.1 # fC
    drange = 524288./10. # fC , 19-bits
    #drange = 5242880./10. # fC , make it 10x 19-bits to give head room

    drops = {} # ndrop depends on nman
    drops[4,4] = 0
    drops[4,3] = 1 
    drops[4,2] = 2
    drops[5,4] = 0
    drops[5,3] = 1 
    drops[5,2] = 2
    ndrop = drops[nexp, nman]
    
    dynRange =  {}
    dynRange[4,4] = 507904
    dynRange[4,3] = 491520
    dynRange[4,2] = 458752
    dynRange[5,4] = 33285996544
    dynRange[5,3] = 32212254720
    dynRange[5,2] = 30064771072

    # tc_uncompressedCharge is actually ADC

    #    iadc = encodeChg19(ichg, lsb, drange)
    #iadc = int(ichg/lsb)

    # return perfect charge in case of saturation
    #if iadc > dynRange[nexp, nman] : 
    #    return ichg
    #    icode   = encode(iadc,iround,ndrop, nexp, nman)
    icode   = encode(ichg, iround, ndrop, nexp, nman)
    dec_num = decode(icode[0], icode[1], ndrop)
    dec_num = dec_num*lsb # backout 19-bit digitization
    return dec_num

#code_table[  0, "tc4"] = ("0000000", "0000", "000",       0, "0b000000000000000000000")
#code_table[  1, "tc4"] = ("0000001", "0000", "001",       2, "0b000000000000000000010")
#code_table[  2, "tc4"] = ("0000010", "0000", "010",       4, "0b000000000000000000100")
#code_table[  3, "tc4"] = ("0000011", "0000", "011",       6, "0b000000000000000000110")
#code_table[  4, "tc4"] = ("0000100", "0000", "100",       8, "0b000000000000000001000")
#code_table[  5, "tc4"] = ("0000101", "0000", "101",      10, "0b000000000000000001010")
#code_table[  6, "tc4"] = ("0000110", "0000", "110",      12, "0b000000000000000001100")
#code_table[  7, "tc4"] = ("0000111", "0000", "111",      14, "0b000000000000000001110")
#code_table[  8, "tc4"] = ("0001000", "0001", "000",      16, "0b000000000000000010000")
#code_table[  9, "tc4"] = ("0001001", "0001", "001",      18, "0b000000000000000010010")
#code_table[ 10, "tc4"] = ("0001010", "0001", "010",      20, "0b000000000000000010100")
#code_table[ 11, "tc4"] = ("0001011", "0001", "011",      22, "0b000000000000000010110")
#code_table[ 12, "tc4"] = ("0001100", "0001", "100",      24, "0b000000000000000011000")
#code_table[ 13, "tc4"] = ("0001101", "0001", "101",      26, "0b000000000000000011010")
#code_table[ 14, "tc4"] = ("0001110", "0001", "110",      28, "0b000000000000000011100")
#code_table[ 15, "tc4"] = ("0001111", "0001", "111",      30, "0b000000000000000011110")
#code_table[ 16, "tc4"] = ("0010000", "0010", "000",      32, "0b000000000000000100000")
#code_table[ 17, "tc4"] = ("0010001", "0010", "001",      36, "0b000000000000000100100")
#code_table[ 18, "tc4"] = ("0010010", "0010", "010",      40, "0b000000000000000101000")
#code_table[ 19, "tc4"] = ("0010011", "0010", "011",      44, "0b000000000000000101100")
#code_table[ 20, "tc4"] = ("0010100", "0010", "100",      48, "0b000000000000000110000")
#code_table[ 21, "tc4"] = ("0010101", "0010", "101",      52, "0b000000000000000110100")
#code_table[ 22, "tc4"] = ("0010110", "0010", "110",      56, "0b000000000000000111000")
#code_table[ 23, "tc4"] = ("0010111", "0010", "111",      60, "0b000000000000000111100")
#code_table[ 24, "tc4"] = ("0011000", "0011", "000",      64, "0b000000000000001000000")
#code_table[ 25, "tc4"] = ("0011001", "0011", "001",      72, "0b000000000000001001000")
#code_table[ 26, "tc4"] = ("0011010", "0011", "010",      80, "0b000000000000001010000")
#code_table[ 27, "tc4"] = ("0011011", "0011", "011",      88, "0b000000000000001011000")
#code_table[ 28, "tc4"] = ("0011100", "0011", "100",      96, "0b000000000000001100000")
#code_table[ 29, "tc4"] = ("0011101", "0011", "101",     104, "0b000000000000001101000")
#code_table[ 30, "tc4"] = ("0011110", "0011", "110",     112, "0b000000000000001110000")
#code_table[ 31, "tc4"] = ("0011111", "0011", "111",     120, "0b000000000000001111000")
#code_table[ 32, "tc4"] = ("0100000", "0100", "000",     128, "0b000000000000010000000")
#code_table[ 33, "tc4"] = ("0100001", "0100", "001",     144, "0b000000000000010010000")
#code_table[ 34, "tc4"] = ("0100010", "0100", "010",     160, "0b000000000000010100000")
#code_table[ 35, "tc4"] = ("0100011", "0100", "011",     176, "0b000000000000010110000")
#code_table[ 36, "tc4"] = ("0100100", "0100", "100",     192, "0b000000000000011000000")
#code_table[ 37, "tc4"] = ("0100101", "0100", "101",     208, "0b000000000000011010000")
#code_table[ 38, "tc4"] = ("0100110", "0100", "110",     224, "0b000000000000011100000")
#code_table[ 39, "tc4"] = ("0100111", "0100", "111",     240, "0b000000000000011110000")
#code_table[ 40, "tc4"] = ("0101000", "0101", "000",     256, "0b000000000000100000000")
#code_table[ 41, "tc4"] = ("0101001", "0101", "001",     288, "0b000000000000100100000")
#code_table[ 42, "tc4"] = ("0101010", "0101", "010",     320, "0b000000000000101000000")
#code_table[ 43, "tc4"] = ("0101011", "0101", "011",     352, "0b000000000000101100000")
#code_table[ 44, "tc4"] = ("0101100", "0101", "100",     384, "0b000000000000110000000")
#code_table[ 45, "tc4"] = ("0101101", "0101", "101",     416, "0b000000000000110100000")
#code_table[ 46, "tc4"] = ("0101110", "0101", "110",     448, "0b000000000000111000000")
#code_table[ 47, "tc4"] = ("0101111", "0101", "111",     480, "0b000000000000111100000")
#code_table[ 48, "tc4"] = ("0110000", "0110", "000",     512, "0b000000000001000000000")
#code_table[ 49, "tc4"] = ("0110001", "0110", "001",     576, "0b000000000001001000000")
#code_table[ 50, "tc4"] = ("0110010", "0110", "010",     640, "0b000000000001010000000")
#code_table[ 51, "tc4"] = ("0110011", "0110", "011",     704, "0b000000000001011000000")
#code_table[ 52, "tc4"] = ("0110100", "0110", "100",     768, "0b000000000001100000000")
#code_table[ 53, "tc4"] = ("0110101", "0110", "101",     832, "0b000000000001101000000")
#code_table[ 54, "tc4"] = ("0110110", "0110", "110",     896, "0b000000000001110000000")
#code_table[ 55, "tc4"] = ("0110111", "0110", "111",     960, "0b000000000001111000000")
#code_table[ 56, "tc4"] = ("0111000", "0111", "000",    1024, "0b000000000010000000000")
#code_table[ 57, "tc4"] = ("0111001", "0111", "001",    1152, "0b000000000010010000000")
#code_table[ 58, "tc4"] = ("0111010", "0111", "010",    1280, "0b000000000010100000000")
#code_table[ 59, "tc4"] = ("0111011", "0111", "011",    1408, "0b000000000010110000000")
#code_table[ 60, "tc4"] = ("0111100", "0111", "100",    1536, "0b000000000011000000000")
#code_table[ 61, "tc4"] = ("0111101", "0111", "101",    1664, "0b000000000011010000000")
#code_table[ 62, "tc4"] = ("0111110", "0111", "110",    1792, "0b000000000011100000000")
#code_table[ 63, "tc4"] = ("0111111", "0111", "111",    1920, "0b000000000011110000000")
#code_table[ 64, "tc4"] = ("1000000", "1000", "000",    2048, "0b000000000100000000000")
#code_table[ 65, "tc4"] = ("1000001", "1000", "001",    2304, "0b000000000100100000000")
#code_table[ 66, "tc4"] = ("1000010", "1000", "010",    2560, "0b000000000101000000000")
#code_table[ 67, "tc4"] = ("1000011", "1000", "011",    2816, "0b000000000101100000000")
#code_table[ 68, "tc4"] = ("1000100", "1000", "100",    3072, "0b000000000110000000000")
#code_table[ 69, "tc4"] = ("1000101", "1000", "101",    3328, "0b000000000110100000000")
#code_table[ 70, "tc4"] = ("1000110", "1000", "110",    3584, "0b000000000111000000000")
#code_table[ 71, "tc4"] = ("1000111", "1000", "111",    3840, "0b000000000111100000000")
#code_table[ 72, "tc4"] = ("1001000", "1001", "000",    4096, "0b000000001000000000000")
#code_table[ 73, "tc4"] = ("1001001", "1001", "001",    4608, "0b000000001001000000000")
#code_table[ 74, "tc4"] = ("1001010", "1001", "010",    5120, "0b000000001010000000000")
#code_table[ 75, "tc4"] = ("1001011", "1001", "011",    5632, "0b000000001011000000000")
#code_table[ 76, "tc4"] = ("1001100", "1001", "100",    6144, "0b000000001100000000000")
#code_table[ 77, "tc4"] = ("1001101", "1001", "101",    6656, "0b000000001101000000000")
#code_table[ 78, "tc4"] = ("1001110", "1001", "110",    7168, "0b000000001110000000000")
#code_table[ 79, "tc4"] = ("1001111", "1001", "111",    7680, "0b000000001111000000000")
#code_table[ 80, "tc4"] = ("1010000", "1010", "000",    8192, "0b000000010000000000000")
#code_table[ 81, "tc4"] = ("1010001", "1010", "001",    9216, "0b000000010010000000000")
#code_table[ 82, "tc4"] = ("1010010", "1010", "010",   10240, "0b000000010100000000000")
#code_table[ 83, "tc4"] = ("1010011", "1010", "011",   11264, "0b000000010110000000000")
#code_table[ 84, "tc4"] = ("1010100", "1010", "100",   12288, "0b000000011000000000000")
#code_table[ 85, "tc4"] = ("1010101", "1010", "101",   13312, "0b000000011010000000000")
#code_table[ 86, "tc4"] = ("1010110", "1010", "110",   14336, "0b000000011100000000000")
#code_table[ 87, "tc4"] = ("1010111", "1010", "111",   15360, "0b000000011110000000000")
#code_table[ 88, "tc4"] = ("1011000", "1011", "000",   16384, "0b000000100000000000000")
#code_table[ 89, "tc4"] = ("1011001", "1011", "001",   18432, "0b000000100100000000000")
#code_table[ 90, "tc4"] = ("1011010", "1011", "010",   20480, "0b000000101000000000000")
#code_table[ 91, "tc4"] = ("1011011", "1011", "011",   22528, "0b000000101100000000000")
#code_table[ 92, "tc4"] = ("1011100", "1011", "100",   24576, "0b000000110000000000000")
#code_table[ 93, "tc4"] = ("1011101", "1011", "101",   26624, "0b000000110100000000000")
#code_table[ 94, "tc4"] = ("1011110", "1011", "110",   28672, "0b000000111000000000000")
#code_table[ 95, "tc4"] = ("1011111", "1011", "111",   30720, "0b000000111100000000000")
#code_table[ 96, "tc4"] = ("1100000", "1100", "000",   32768, "0b000001000000000000000")
#code_table[ 97, "tc4"] = ("1100001", "1100", "001",   36864, "0b000001001000000000000")
#code_table[ 98, "tc4"] = ("1100010", "1100", "010",   40960, "0b000001010000000000000")
#code_table[ 99, "tc4"] = ("1100011", "1100", "011",   45056, "0b000001011000000000000")
#code_table[100, "tc4"] = ("1100100", "1100", "100",   49152, "0b000001100000000000000")
#code_table[101, "tc4"] = ("1100101", "1100", "101",   53248, "0b000001101000000000000")
#code_table[102, "tc4"] = ("1100110", "1100", "110",   57344, "0b000001110000000000000")
#code_table[103, "tc4"] = ("1100111", "1100", "111",   61440, "0b000001111000000000000")
#code_table[104, "tc4"] = ("1101000", "1101", "000",   65536, "0b000010000000000000000")
#code_table[105, "tc4"] = ("1101001", "1101", "001",   73728, "0b000010010000000000000")
#code_table[106, "tc4"] = ("1101010", "1101", "010",   81920, "0b000010100000000000000")
#code_table[107, "tc4"] = ("1101011", "1101", "011",   90112, "0b000010110000000000000")
#code_table[108, "tc4"] = ("1101100", "1101", "100",   98304, "0b000011000000000000000")
#code_table[109, "tc4"] = ("1101101", "1101", "101",  106496, "0b000011010000000000000")
#code_table[110, "tc4"] = ("1101110", "1101", "110",  114688, "0b000011100000000000000")
#code_table[111, "tc4"] = ("1101111", "1101", "111",  122880, "0b000011110000000000000")
#code_table[112, "tc4"] = ("1110000", "1110", "000",  131072, "0b000100000000000000000")
#code_table[113, "tc4"] = ("1110001", "1110", "001",  147456, "0b000100100000000000000")
#code_table[114, "tc4"] = ("1110010", "1110", "010",  163840, "0b000101000000000000000")
#code_table[115, "tc4"] = ("1110011", "1110", "011",  180224, "0b000101100000000000000")
#code_table[116, "tc4"] = ("1110100", "1110", "100",  196608, "0b000110000000000000000")
#code_table[117, "tc4"] = ("1110101", "1110", "101",  212992, "0b000110100000000000000")
#code_table[118, "tc4"] = ("1110110", "1110", "110",  229376, "0b000111000000000000000")
#code_table[119, "tc4"] = ("1110111", "1110", "111",  245760, "0b000111100000000000000")
#code_table[120, "tc4"] = ("1111000", "1111", "000",  262144, "0b001000000000000000000")
#code_table[121, "tc4"] = ("1111001", "1111", "001",  294912, "0b001001000000000000000")
#code_table[122, "tc4"] = ("1111010", "1111", "010",  327680, "0b001010000000000000000")
#code_table[123, "tc4"] = ("1111011", "1111", "011",  360448, "0b001011000000000000000")
#code_table[124, "tc4"] = ("1111100", "1111", "100",  393216, "0b001100000000000000000")
#code_table[125, "tc4"] = ("1111101", "1111", "101",  425984, "0b001101000000000000000")
#code_table[126, "tc4"] = ("1111110", "1111", "110",  458752, "0b001110000000000000000")
#code_table[127, "tc4"] = ("1111111", "1111", "111",  491520, "0b001111000000000000000")
#
#code_table[  0, "tc9"] = ("0000000", "0000", "000",       0, "0b000000000000000000000")
#code_table[  1, "tc9"] = ("0000001", "0000", "001",       8, "0b000000000000000001000")
#code_table[  2, "tc9"] = ("0000010", "0000", "010",      16, "0b000000000000000010000")
#code_table[  3, "tc9"] = ("0000011", "0000", "011",      24, "0b000000000000000011000")
#code_table[  4, "tc9"] = ("0000100", "0000", "100",      32, "0b000000000000000100000")
#code_table[  5, "tc9"] = ("0000101", "0000", "101",      40, "0b000000000000000101000")
#code_table[  6, "tc9"] = ("0000110", "0000", "110",      48, "0b000000000000000110000")
#code_table[  7, "tc9"] = ("0000111", "0000", "111",      56, "0b000000000000000111000")
#code_table[  8, "tc9"] = ("0001000", "0001", "000",      64, "0b000000000000001000000")
#code_table[  9, "tc9"] = ("0001001", "0001", "001",      72, "0b000000000000001001000")
#code_table[ 10, "tc9"] = ("0001010", "0001", "010",      80, "0b000000000000001010000")
#code_table[ 11, "tc9"] = ("0001011", "0001", "011",      88, "0b000000000000001011000")
#code_table[ 12, "tc9"] = ("0001100", "0001", "100",      96, "0b000000000000001100000")
#code_table[ 13, "tc9"] = ("0001101", "0001", "101",     104, "0b000000000000001101000")
#code_table[ 14, "tc9"] = ("0001110", "0001", "110",     112, "0b000000000000001110000")
#code_table[ 15, "tc9"] = ("0001111", "0001", "111",     120, "0b000000000000001111000")
#code_table[ 16, "tc9"] = ("0010000", "0010", "000",     128, "0b000000000000010000000")
#code_table[ 17, "tc9"] = ("0010001", "0010", "001",     144, "0b000000000000010010000")
#code_table[ 18, "tc9"] = ("0010010", "0010", "010",     160, "0b000000000000010100000")
#code_table[ 19, "tc9"] = ("0010011", "0010", "011",     176, "0b000000000000010110000")
#code_table[ 20, "tc9"] = ("0010100", "0010", "100",     192, "0b000000000000011000000")
#code_table[ 21, "tc9"] = ("0010101", "0010", "101",     208, "0b000000000000011010000")
#code_table[ 22, "tc9"] = ("0010110", "0010", "110",     224, "0b000000000000011100000")
#code_table[ 23, "tc9"] = ("0010111", "0010", "111",     240, "0b000000000000011110000")
#code_table[ 24, "tc9"] = ("0011000", "0011", "000",     256, "0b000000000000100000000")
#code_table[ 25, "tc9"] = ("0011001", "0011", "001",     288, "0b000000000000100100000")
#code_table[ 26, "tc9"] = ("0011010", "0011", "010",     320, "0b000000000000101000000")
#code_table[ 27, "tc9"] = ("0011011", "0011", "011",     352, "0b000000000000101100000")
#code_table[ 28, "tc9"] = ("0011100", "0011", "100",     384, "0b000000000000110000000")
#code_table[ 29, "tc9"] = ("0011101", "0011", "101",     416, "0b000000000000110100000")
#code_table[ 30, "tc9"] = ("0011110", "0011", "110",     448, "0b000000000000111000000")
#code_table[ 31, "tc9"] = ("0011111", "0011", "111",     480, "0b000000000000111100000")
#code_table[ 32, "tc9"] = ("0100000", "0100", "000",     512, "0b000000000001000000000")
#code_table[ 33, "tc9"] = ("0100001", "0100", "001",     576, "0b000000000001001000000")
#code_table[ 34, "tc9"] = ("0100010", "0100", "010",     640, "0b000000000001010000000")
#code_table[ 35, "tc9"] = ("0100011", "0100", "011",     704, "0b000000000001011000000")
#code_table[ 36, "tc9"] = ("0100100", "0100", "100",     768, "0b000000000001100000000")
#code_table[ 37, "tc9"] = ("0100101", "0100", "101",     832, "0b000000000001101000000")
#code_table[ 38, "tc9"] = ("0100110", "0100", "110",     896, "0b000000000001110000000")
#code_table[ 39, "tc9"] = ("0100111", "0100", "111",     960, "0b000000000001111000000")
#code_table[ 40, "tc9"] = ("0101000", "0101", "000",    1024, "0b000000000010000000000")
#code_table[ 41, "tc9"] = ("0101001", "0101", "001",    1152, "0b000000000010010000000")
#code_table[ 42, "tc9"] = ("0101010", "0101", "010",    1280, "0b000000000010100000000")
#code_table[ 43, "tc9"] = ("0101011", "0101", "011",    1408, "0b000000000010110000000")
#code_table[ 44, "tc9"] = ("0101100", "0101", "100",    1536, "0b000000000011000000000")
#code_table[ 45, "tc9"] = ("0101101", "0101", "101",    1664, "0b000000000011010000000")
#code_table[ 46, "tc9"] = ("0101110", "0101", "110",    1792, "0b000000000011100000000")
#code_table[ 47, "tc9"] = ("0101111", "0101", "111",    1920, "0b000000000011110000000")
#code_table[ 48, "tc9"] = ("0110000", "0110", "000",    2048, "0b000000000100000000000")
#code_table[ 49, "tc9"] = ("0110001", "0110", "001",    2304, "0b000000000100100000000")
#code_table[ 50, "tc9"] = ("0110010", "0110", "010",    2560, "0b000000000101000000000")
#code_table[ 51, "tc9"] = ("0110011", "0110", "011",    2816, "0b000000000101100000000")
#code_table[ 52, "tc9"] = ("0110100", "0110", "100",    3072, "0b000000000110000000000")
#code_table[ 53, "tc9"] = ("0110101", "0110", "101",    3328, "0b000000000110100000000")
#code_table[ 54, "tc9"] = ("0110110", "0110", "110",    3584, "0b000000000111000000000")
#code_table[ 55, "tc9"] = ("0110111", "0110", "111",    3840, "0b000000000111100000000")
#code_table[ 56, "tc9"] = ("0111000", "0111", "000",    4096, "0b000000001000000000000")
#code_table[ 57, "tc9"] = ("0111001", "0111", "001",    4608, "0b000000001001000000000")
#code_table[ 58, "tc9"] = ("0111010", "0111", "010",    5120, "0b000000001010000000000")
#code_table[ 59, "tc9"] = ("0111011", "0111", "011",    5632, "0b000000001011000000000")
#code_table[ 60, "tc9"] = ("0111100", "0111", "100",    6144, "0b000000001100000000000")
#code_table[ 61, "tc9"] = ("0111101", "0111", "101",    6656, "0b000000001101000000000")
#code_table[ 62, "tc9"] = ("0111110", "0111", "110",    7168, "0b000000001110000000000")
#code_table[ 63, "tc9"] = ("0111111", "0111", "111",    7680, "0b000000001111000000000")
#code_table[ 64, "tc9"] = ("1000000", "1000", "000",    8192, "0b000000010000000000000")
#code_table[ 65, "tc9"] = ("1000001", "1000", "001",    9216, "0b000000010010000000000")
#code_table[ 66, "tc9"] = ("1000010", "1000", "010",   10240, "0b000000010100000000000")
#code_table[ 67, "tc9"] = ("1000011", "1000", "011",   11264, "0b000000010110000000000")
#code_table[ 68, "tc9"] = ("1000100", "1000", "100",   12288, "0b000000011000000000000")
#code_table[ 69, "tc9"] = ("1000101", "1000", "101",   13312, "0b000000011010000000000")
#code_table[ 70, "tc9"] = ("1000110", "1000", "110",   14336, "0b000000011100000000000")
#code_table[ 71, "tc9"] = ("1000111", "1000", "111",   15360, "0b000000011110000000000")
#code_table[ 72, "tc9"] = ("1001000", "1001", "000",   16384, "0b000000100000000000000")
#code_table[ 73, "tc9"] = ("1001001", "1001", "001",   18432, "0b000000100100000000000")
#code_table[ 74, "tc9"] = ("1001010", "1001", "010",   20480, "0b000000101000000000000")
#code_table[ 75, "tc9"] = ("1001011", "1001", "011",   22528, "0b000000101100000000000")
#code_table[ 76, "tc9"] = ("1001100", "1001", "100",   24576, "0b000000110000000000000")
#code_table[ 77, "tc9"] = ("1001101", "1001", "101",   26624, "0b000000110100000000000")
#code_table[ 78, "tc9"] = ("1001110", "1001", "110",   28672, "0b000000111000000000000")
#code_table[ 79, "tc9"] = ("1001111", "1001", "111",   30720, "0b000000111100000000000")
#code_table[ 80, "tc9"] = ("1010000", "1010", "000",   32768, "0b000001000000000000000")
#code_table[ 81, "tc9"] = ("1010001", "1010", "001",   36864, "0b000001001000000000000")
#code_table[ 82, "tc9"] = ("1010010", "1010", "010",   40960, "0b000001010000000000000")
#code_table[ 83, "tc9"] = ("1010011", "1010", "011",   45056, "0b000001011000000000000")
#code_table[ 84, "tc9"] = ("1010100", "1010", "100",   49152, "0b000001100000000000000")
#code_table[ 85, "tc9"] = ("1010101", "1010", "101",   53248, "0b000001101000000000000")
#code_table[ 86, "tc9"] = ("1010110", "1010", "110",   57344, "0b000001110000000000000")
#code_table[ 87, "tc9"] = ("1010111", "1010", "111",   61440, "0b000001111000000000000")
#code_table[ 88, "tc9"] = ("1011000", "1011", "000",   65536, "0b000010000000000000000")
#code_table[ 89, "tc9"] = ("1011001", "1011", "001",   73728, "0b000010010000000000000")
#code_table[ 90, "tc9"] = ("1011010", "1011", "010",   81920, "0b000010100000000000000")
#code_table[ 91, "tc9"] = ("1011011", "1011", "011",   90112, "0b000010110000000000000")
#code_table[ 92, "tc9"] = ("1011100", "1011", "100",   98304, "0b000011000000000000000")
#code_table[ 93, "tc9"] = ("1011101", "1011", "101",  106496, "0b000011010000000000000")
#code_table[ 94, "tc9"] = ("1011110", "1011", "110",  114688, "0b000011100000000000000")
#code_table[ 95, "tc9"] = ("1011111", "1011", "111",  122880, "0b000011110000000000000")
#code_table[ 96, "tc9"] = ("1100000", "1100", "000",  131072, "0b000100000000000000000")
#code_table[ 97, "tc9"] = ("1100001", "1100", "001",  147456, "0b000100100000000000000")
#code_table[ 98, "tc9"] = ("1100010", "1100", "010",  163840, "0b000101000000000000000")
#code_table[ 99, "tc9"] = ("1100011", "1100", "011",  180224, "0b000101100000000000000")
#code_table[100, "tc9"] = ("1100100", "1100", "100",  196608, "0b000110000000000000000")
#code_table[101, "tc9"] = ("1100101", "1100", "101",  212992, "0b000110100000000000000")
#code_table[102, "tc9"] = ("1100110", "1100", "110",  229376, "0b000111000000000000000")
#code_table[103, "tc9"] = ("1100111", "1100", "111",  245760, "0b000111100000000000000")
#code_table[104, "tc9"] = ("1101000", "1101", "000",  262144, "0b001000000000000000000")
#code_table[105, "tc9"] = ("1101001", "1101", "001",  294912, "0b001001000000000000000")
#code_table[106, "tc9"] = ("1101010", "1101", "010",  327680, "0b001010000000000000000")
#code_table[107, "tc9"] = ("1101011", "1101", "011",  360448, "0b001011000000000000000")
#code_table[108, "tc9"] = ("1101100", "1101", "100",  393216, "0b001100000000000000000")
#code_table[109, "tc9"] = ("1101101", "1101", "101",  425984, "0b001101000000000000000")
#code_table[110, "tc9"] = ("1101110", "1101", "110",  458752, "0b001110000000000000000")
#code_table[111, "tc9"] = ("1101111", "1101", "111",  491520, "0b001111000000000000000")
#code_table[112, "tc9"] = ("1110000", "1110", "000",  524288, "0b010000000000000000000")
#code_table[113, "tc9"] = ("1110001", "1110", "001",  589824, "0b010010000000000000000")
#code_table[114, "tc9"] = ("1110010", "1110", "010",  655360, "0b010100000000000000000")
#code_table[115, "tc9"] = ("1110011", "1110", "011",  720896, "0b010110000000000000000")
#code_table[116, "tc9"] = ("1110100", "1110", "100",  786432, "0b011000000000000000000")
#code_table[117, "tc9"] = ("1110101", "1110", "101",  851968, "0b011010000000000000000")
#code_table[118, "tc9"] = ("1110110", "1110", "110",  917504, "0b011100000000000000000")
#code_table[119, "tc9"] = ("1110111", "1110", "111",  983040, "0b011110000000000000000")
#code_table[120, "tc9"] = ("1111000", "1111", "000", 1048576, "0b100000000000000000000")
#code_table[121, "tc9"] = ("1111001", "1111", "001", 1179648, "0b100100000000000000000")
#code_table[122, "tc9"] = ("1111010", "1111", "010", 1310720, "0b101000000000000000000")
#code_table[123, "tc9"] = ("1111011", "1111", "011", 1441792, "0b101100000000000000000")
#code_table[124, "tc9"] = ("1111100", "1111", "100", 1572864, "0b110000000000000000000")
#code_table[125, "tc9"] = ("1111101", "1111", "101", 1703936, "0b110100000000000000000")
#code_table[126, "tc9"] = ("1111110", "1111", "110", 1835008, "0b111000000000000000000")
#code_table[127, "tc9"] = ("1111111", "1111", "111", 1966080, "0b111100000000000000000")
    

# Andrew

#def encodeCharge(ichg): # ichg in fC
#    ichg = ichg/lsb
#    
#    range_width = 2<<nman
#    bin_width = lsb
#
#    if ichg < range_width:
#        return ichg/bin_width
#    else:
#        iexp = 2
#        for ii in range(2, 2<<(nexp-1)):
#            if ichg < range_width * (2 << (ii-2)):
#                iexp = ii
#                break
#        if iexp == 2<<(nexp-1):
#            return 2<<(nman+nexp-1) - 1
#        bin_width = lsb * (2<<(iexp-2))
#        return (2 << (nman-1)) * math.floor( (ichg - range_width * (1<<(iexp-2)))/bin_width ) 
#            
#def decodeADC(adc):
#    man = adc & ((1<<nman)-1)
#    exp = adc >> nman
#
#    if exp==0:
#        return man*lsb
#    else:
#        return ((1<<(exp_nman-1)) + (1<<(exp-1))*man)*lsb


